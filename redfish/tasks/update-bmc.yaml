- name: What is the current BMC version
  community.general.redfish_info:
    category: Update
    command: GetFirmwareInventory
    baseuri: "{{ ansible_host }}"
    username: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
  register: bmc_verification_content

- name: Define target Bmc firmware version
  ansible.builtin.set_fact:
    target_bmc_firmware_version: "{{ bmc_version }}"

- name: Extract current BMC firmware version
  ansible.builtin.set_fact:
    current_bmc_firmware_version: >-
      {{ bmc_verification_content.redfish_facts.firmware.entries
      | selectattr('Id', 'equalto', 'BMC')
      | map(attribute='Version')
      | list
      | first }}

- name: Display current Bmc Firmware Version
  ansible.builtin.debug:
    var: current_bmc_firmware_version

- name: Check if Bmc update is needed
  ansible.builtin.set_fact:
    update_needed: "{{ current_bmc_firmware_version != target_bmc_firmware_version }}"

- name: Update BMC
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/redfish/v1/UpdateService/Actions/SimpleUpdate"
    method: POST
    user: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
    validate_certs: false
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      UpdateComponent: "BMC"
      TransferProtocol: "HTTP"
      ImageURI: "{{ nginx_server_url }}{{ bmc_path }}"
    status_code: [200, 202]
  register: bmc_update_result
  when: update_needed

- name: Extract task ID from the location for BMC
  ansible.builtin.set_fact:
    bmc_update_task_id: "{{ bmc_update_result.location | regex_search('/Tasks/(\\d+)', '\\1') }}"
  when: bmc_update_response is defined and bmc_update_response.location is defined

- name: Check BMC update task status
  ansible.builtin.uri:
    url: "https://{{ ansible_host }}/redfish/v1/TaskService/Tasks/{{  bmc_update_task_id[0] }}"
    method: GET
    user: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
    validate_certs: false
    force_basic_auth: true
    status_code: [200, 202]
    headers:
      Accept: "application/json"
  register: task_status
  until: task_status.json.TaskState == "Completed"
  retries: 100
  delay: 30
  when: bmc_update_response is defined and bmc_update_response.location is defined

- name: Reboot computer
  community.general.redfish_command:
    category: Systems
    command: PowerReboot
    baseuri: "{{ ansible_host }}"
    username: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
    timeout: 30
  when: bmc_update_response is defined

- name: What is the new BMC version
  community.general.redfish_info:
    category: Update
    command: GetFirmwareInventory
    baseuri: "{{ ansible_host }}"
    username: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
  register: bmc_verification_content

- name: Display new BMC Firmware Version
  ansible.builtin.debug:
    var: bmc_verification_content
